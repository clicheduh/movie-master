{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\movie-master\\\\components\\\\MovieCard.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// import { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport axios from 'axios';\n\nconst styles = theme => ({\n  root: {\n    maxWidth: 345,\n    padding: theme.spacing(2)\n  },\n  cardContent: {\n    marginLeft: '5px'\n  },\n  buttonActions: {\n    margin: '5px',\n    padding: '10px'\n  },\n  movieCardImage: {\n    width: '100%',\n    minHeight: '100%'\n  },\n  movieTitle: {\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden'\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"classes\", \"onClose\"]);\n\n  return __jsx(MuiDialogTitle, _extends({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), __jsx(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, children), onClose ? __jsx(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, __jsx(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  })) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst MovieCard = withStyles(styles)(props => {\n  // const classes = useStyles();\n  const {\n    classes\n  } = props;\n  const {\n    movie\n  } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  var movieImg;\n\n  if (movie.Poster === 'N/A') {\n    movieImg = '/images/404-img.png';\n  } else {\n    movieImg = movie.Poster;\n  }\n\n  axios.get('http://www.omdbapi.com/?apikey=50f7c729&i=' + movie.imdbID).then(res => {\n    let output = `\n                <Typography gutterBottom>${res.data.Plot}</Typography>\n            `;\n    document.getElementById('plotModal').innerHTML = output;\n  });\n  return __jsx(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, __jsx(CardActionArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, __jsx(CardMedia, {\n    component: \"img\",\n    \"max-height\": \"300px\",\n    image: movieImg,\n    width: \"100%\",\n    className: classes.movieCardImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), __jsx(CardContent, {\n    className: classes.cardContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    className: classes.movieTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, movie.Title), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \"Year Released: \", movie.Year))), __jsx(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    size: \"small\",\n    variant: \"outlined\",\n    color: \"primary\",\n    className: classes.buttonActions,\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Know more\"), __jsx(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, __jsx(DialogTitle, {\n    id: \"customized-dialog-title\",\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, movie.Title), __jsx(DialogContent, {\n    dividers: true,\n    id: \"plotModal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }))));\n});\nexport default MovieCard;","map":{"version":3,"sources":["C:/Users/HP/Desktop/movie-master/components/MovieCard.js"],"names":["withStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","Dialog","MuiDialogTitle","MuiDialogContent","IconButton","CloseIcon","axios","styles","theme","root","maxWidth","padding","spacing","cardContent","marginLeft","buttonActions","margin","movieCardImage","width","minHeight","movieTitle","textOverflow","whiteSpace","overflow","closeButton","position","right","top","color","palette","grey","DialogTitle","props","children","classes","onClose","other","DialogContent","MovieCard","movie","open","setOpen","React","useState","handleClickOpen","handleClose","movieImg","Poster","get","imdbID","then","res","output","data","Plot","document","getElementById","innerHTML","Title","Year"],"mappings":"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","sourcesContent":["// import { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport axios from 'axios';\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n        padding: theme.spacing(2)\r\n    },\r\n    cardContent: {\r\n        marginLeft: '5px'\r\n    },\r\n    buttonActions: {\r\n        margin: '5px',\r\n        padding: '10px'\r\n    },\r\n    movieCardImage: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    movieTitle: {\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden'\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500]\r\n    }\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    className={classes.closeButton}\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2)\r\n    }\r\n}))(MuiDialogContent);\r\n\r\nconst MovieCard = withStyles(styles)((props) => {\r\n    // const classes = useStyles();\r\n    const { classes } = props;\r\n    const { movie } = props;\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    var movieImg;\r\n    if (movie.Poster === 'N/A') {\r\n        movieImg = '/images/404-img.png';\r\n    } else {\r\n        movieImg = movie.Poster;\r\n    }\r\n\r\n    axios\r\n        .get('http://www.omdbapi.com/?apikey=50f7c729&i=' + movie.imdbID)\r\n        .then((res) => {\r\n            let output = `\r\n                <Typography gutterBottom>${res.data.Plot}</Typography>\r\n            `;\r\n\r\n            document.getElementById('plotModal').innerHTML = output;\r\n        });\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    max-height=\"300px\"\r\n                    image={movieImg}\r\n                    width=\"100%\"\r\n                    className={classes.movieCardImage}\r\n                />\r\n                <CardContent className={classes.cardContent}>\r\n                    <Typography\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h2\"\r\n                        className={classes.movieTitle}\r\n                    >\r\n                        {movie.Title}\r\n                    </Typography>\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                    >\r\n                        Year Released: {movie.Year}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                {/* <Button\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    className={classes.buttonActions}\r\n                    onClick={this.clickHandler}\r\n                >\r\n                    Learn More\r\n                </Button> */}\r\n                <Button\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.buttonActions}\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    Know more\r\n                </Button>\r\n                <Dialog\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={open}\r\n                >\r\n                    <DialogTitle\r\n                        id=\"customized-dialog-title\"\r\n                        onClose={handleClose}\r\n                    >\r\n                        {movie.Title}\r\n                    </DialogTitle>\r\n                    <DialogContent dividers id=\"plotModal\">\r\n                        {/* <Typography gutterBottom>\r\n                            Lorem ipsum dolor sit amet consectetur adipisicing\r\n                            elit. Nobis quia animi atque culpa sapiente eos illo\r\n                            quaerat ratione sint labore nihil, distinctio vero\r\n                            quam earum quae quis optio laboriosam veritatis!\r\n                            \r\n                        </Typography> */}\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default MovieCard;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\movie-master\\\\components\\\\PlotModal.js\",\n    _s = $RefreshSig$(),\n    _this2 = this,\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\nvar emails = ['username@gmail.com', 'user02@gmail.com'];\nvar useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n});\n\nfunction SimpleDialog(props) {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n  var onClose = props.onClose,\n      selectedValue = props.selectedValue,\n      open = props.open;\n\n  var handleClose = function handleClose() {\n    onClose(selectedValue);\n  };\n\n  var handleListItemClick = function handleListItemClick(value) {\n    onClose(value);\n  };\n\n  return __jsx(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Set backup account\"), __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, emails.map(function (email) {\n    return __jsx(ListItem, {\n      button: true,\n      onClick: function onClick() {\n        return handleListItemClick(email);\n      },\n      key: email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, __jsx(ListItemAvatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, __jsx(Avatar, {\n      className: classes.avatar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }, __jsx(PersonIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }\n    }))), __jsx(ListItemText, {\n      primary: email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }));\n  }), __jsx(ListItem, {\n    autoFocus: true,\n    button: true,\n    onClick: function onClick() {\n      return handleListItemClick('addAccount');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, __jsx(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, __jsx(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }))), __jsx(ListItemText, {\n    primary: \"Add account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }))));\n}\n\n_s(SimpleDialog, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = SimpleDialog;\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\n\nvar PlotModal = function PlotModal() {\n  _s2();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(emails[1]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedValue = _React$useState4[0],\n      setSelectedValue = _React$useState4[1];\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose(value) {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Selected: \", selectedValue), __jsx(\"br\", {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Open simple dialog\"), __jsx(SimpleDialog, {\n    selectedValue: selectedValue,\n    open: open,\n    onClose: handleClose,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s2(PlotModal, \"Do4OkZlv0qopuj/OyvdbwyP1nrE=\");\n\n_c2 = PlotModal;\nexport default PlotModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SimpleDialog\");\n$RefreshReg$(_c2, \"PlotModal\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/movie-master/components/PlotModal.js"],"names":["PropTypes","makeStyles","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","DialogTitle","Dialog","PersonIcon","AddIcon","Typography","blue","emails","useStyles","avatar","backgroundColor","color","SimpleDialog","props","classes","onClose","selectedValue","open","handleClose","handleListItemClick","value","map","email","propTypes","func","isRequired","bool","string","PlotModal","React","useState","setOpen","setSelectedValue","handleClickOpen"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600]\r\n    }\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n    const classes = useStyles();\r\n    const { onClose, selectedValue, open } = props;\r\n\r\n    const handleClose = () => {\r\n        onClose(selectedValue);\r\n    };\r\n\r\n    const handleListItemClick = (value) => {\r\n        onClose(value);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-dialog-title\"\r\n            open={open}\r\n        >\r\n            <DialogTitle id=\"simple-dialog-title\">\r\n                Set backup account\r\n            </DialogTitle>\r\n            <List>\r\n                {emails.map((email) => (\r\n                    <ListItem\r\n                        button\r\n                        onClick={() => handleListItemClick(email)}\r\n                        key={email}\r\n                    >\r\n                        <ListItemAvatar>\r\n                            <Avatar className={classes.avatar}>\r\n                                <PersonIcon />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={email} />\r\n                    </ListItem>\r\n                ))}\r\n\r\n                <ListItem\r\n                    autoFocus\r\n                    button\r\n                    onClick={() => handleListItemClick('addAccount')}\r\n                >\r\n                    <ListItemAvatar>\r\n                        <Avatar>\r\n                            <AddIcon />\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary=\"Add account\" />\r\n                </ListItem>\r\n            </List>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    selectedValue: PropTypes.string.isRequired\r\n};\r\n\r\nconst PlotModal = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (value) => {\r\n        setOpen(false);\r\n        setSelectedValue(value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"subtitle1\">\r\n                Selected: {selectedValue}\r\n            </Typography>\r\n            <br />\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                Open simple dialog\r\n            </Button>\r\n            <SimpleDialog\r\n                selectedValue={selectedValue}\r\n                open={open}\r\n                onClose={handleClose}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlotModal;\r\n"]},"metadata":{},"sourceType":"module"}